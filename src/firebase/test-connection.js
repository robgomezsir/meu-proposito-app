// Arquivo de teste para verificar a conex√£o com o Firebase
import { db } from './config-simple';
import { collection, addDoc, getDocs, serverTimestamp } from 'firebase/firestore';

// Fun√ß√£o para testar a conex√£o
export const testarConexaoFirebase = async () => {
  try {
    console.log('üî• Testando conex√£o com Firebase...');
    
    // Testar adi√ß√£o de documento
    const testCollection = collection(db, 'teste-conexao');
    const testDoc = {
      mensagem: 'Teste de conex√£o Firebase',
      timestamp: serverTimestamp(),
      teste: true,
      data: new Date().toISOString()
    };
    
    console.log('üìù Tentando adicionar documento de teste...');
    const docRef = await addDoc(testCollection, testDoc);
    console.log('‚úÖ Documento adicionado com sucesso! ID:', docRef.id);
    
    // Testar leitura de documentos
    console.log('üìñ Tentando ler documentos de teste...');
    const querySnapshot = await getDocs(testCollection);
    const documentos = [];
    querySnapshot.forEach((doc) => {
      documentos.push({
        id: doc.id,
        ...doc.data()
      });
    });
    
    console.log('‚úÖ Documentos lidos com sucesso!', documentos);
    
    return {
      sucesso: true,
      documentoId: docRef.id,
      documentos: documentos
    };
    
  } catch (error) {
    console.error('‚ùå Erro ao testar conex√£o Firebase:', error);
    return {
      sucesso: false,
      erro: error.message
    };
  }
};

// Fun√ß√£o para limpar dados de teste
export const limparDadosTeste = async () => {
  try {
    console.log('üßπ Limpando dados de teste...');
    const testCollection = collection(db, 'teste-conexao');
    const querySnapshot = await getDocs(testCollection);
    
    // Por enquanto, apenas logamos os documentos
    // Para deletar, precisar√≠amos implementar a fun√ß√£o de delete
    console.log('üìã Documentos de teste encontrados:', querySnapshot.size);
    
    return {
      sucesso: true,
      documentosEncontrados: querySnapshot.size
    };
    
  } catch (error) {
    console.error('‚ùå Erro ao limpar dados de teste:', error);
    return {
      sucesso: false,
      erro: error.message
    };
  }
};
